USE [ASCTracEDI856]
GO
/****** Object:  StoredProcedure [dbo].[API_945_REQUEST_75CBI]    Script Date: 12/11/2024 10:51:07 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Laurel Williams
-- Create date: 4/24/2020
-- Description:	Extract Sales Order Confirmation with LPN level data specifically for CBI

-- Update mark/heena 5/3/2024 to accomodate plastic pallet shipment
-- Update by Kevin THomas 10/14/2024 rename to API_945_REQUEST_75CBI  cloning API_945_REQUEST_CBI 
-- Update Bill Matangos 2024.11.07 Remove Beer Items Code
-- Update Bill Matangos 2024.11.27 Add export of Header CUSTOM_DATA12 as TARP_ID 
-- =============================================
ALTER PROCEDURE [dbo].[API_945_REQUEST_75CBI] 
	-- Add the parameters for the stored procedure here

	AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here



SELECT 
  'USF4' AS WAREHOUSE_NUMBER,
  CAST( EDI856_SHIPMENT.DATE_SHIPPED AS DATE)  AS ACTUAL_SHIPPED_DATE,
  EDI856_SHIPMENT.ST_NAME AS SHIP_TO_NAME, 
  EDI856_SHIPMENT.ST_CODE AS SHIP_TO_NUMBER, 
  EDI856_SHIPMENT.ST_ADDRESS1 AS MAILING_ADDRESS1,
  EDI856_SHIPMENT.ST_ADDRESS2 AS MAILING_ADDRESS2,
  '' AS MAILING_ADDRESS3,
  EDI856_SHIPMENT.ST_CITY AS CITY, 
  EDI856_SHIPMENT.ST_STATE AS STATE, 
  EDI856_SHIPMENT.ST_ZIP AS ZIP_CODE, 
  EDI856_ORDER.ORDRHDR_CUSTOM_DATA5 AS DOCUMENT_NUMBER, 
  EDI856_ORDER.ORDRHDR_CUSTOM_DATA4 AS DOCUMENT_NUMBER_TYPE,
  EDI856_PALLET.CONTAINER_ID AS HANDLING_UNIT_NUMBER, 
  det.itemid AS ITEM_NUMBER, 
  SUBSTRING(i.DESCRIPTION, 1, 40) AS ITEM_DESCRIPTION, 
  isnull(EDI856_PALLET.STOCKING_UOM, 'EA') AS UNIT_OF_MEASURE, 
  -- Remove for 75CBI --
  --CONVERT(DECIMAL(8,3),case det.itemid
  --     when  '2000167' then 
  --     CASE when (pl.QTY_IGPSOUT > 37 and pl.QTY_IGPSOUT > det.QTYORDERED) then det.QTYORDERED
  --        when pl.QTY_IGPSOUT > 37 then 37 --max pallets is 37 validation by CBI
  --        when pl.QTY_IGPSOUT > det.QTYORDERED then det.QTYORDERED --QTY reported can not exceed qty ordered validation
  --   ELSE pl.QTY_IGPSOUT END      
  --   when  '3000000735' then 
  --    CASE WHEN (pl.QTY_MISCOUT > 37 and pl.QTY_MISCOUT > det.QTYORDERED) then det.QTYORDERED 
  --         when pl.QTY_MISCOUT > 37 then 37  --max pallets is 37 validation by CBI
  --         when pl.QTY_MISCOUT > det.QTYORDERED then det.QTYORDERED --QTY reported can not exceed qty ordered validation
  --   ELSE pl.QTY_MISCOUT END
  --else EDI856_PALLET.QTY_ON_PALLET
  --End ) as ITEM_QUANTITY, 
  -- Added for 75CBI --
  --EDI856_PALLET.QTY_ON_PALLET as ITEM_QUANTITY,
  cast(COALESCE(edi856_pallet.QTY_ON_PALLET, 1) as numeric(15,3))AS item_quantity,
  -- Remove for 75CBI --
  --convert(DECIMAL (8,3 ), case det.itemid
  --  when  '2000167' then 
  --   CASE when (pl.QTY_IGPSOUT > 37 and pl.QTY_IGPSOUT > det.QTYORDERED) then det.QTYORDERED
  --        WHEN  pl.QTY_IGPSOUT > 37 then 37   --max pallets is 37 validation by CBI
  --        when pl.QTY_IGPSOUT > det.QTYORDERED then det.QTYORDERED --QTY reported can not exceed qty ordered validation
  --   ELSE pl.QTY_IGPSOUT END      
  --   when  '3000000735' then
  --    CASE WHEN (pl.QTY_MISCOUT > 37 and pl.QTY_MISCOUT > det.QTYORDERED) then det.QTYORDERED
  --         when pl.QTY_MISCOUT > 37 then 37  --max pallets is 37 validation by CBI
  --         when pl.QTY_MISCOUT > det.QTYORDERED then det.QTYORDERED --QTY reported can not exceed qty ordered validation
  --   ELSE pl.QTY_MISCOUT END
  --else  EDI856_PALLET.QTY_ON_PALLET
  --End ) as HANDLING_UNIT_QUANTITY, 
  -- Added for 75CBI --
  --EDI856_PALLET.QTY_ON_PALLET as HANDLING_UNIT_QUANTITY,
  cast(COALESCE(edi856_pallet.QTY_ON_PALLET, 1) as numeric(15,3)) AS handling_unit_quantity,
  -- Remove for 75CBI --
  --case when det.itemid = '2000167' then '8000'  --This catch allows for line items to be added for pallets and still have line numbers for CBI
  --     when det.itemid = '3000000735' then '8100' --This catch allows for line items to be added for pallets and still have line numbers for CBI
  --else det.linenumber  End as ITEM_LINE_NUMBER,
  -- Added for 75CBI --
  det.linenumber as ITEM_LINE_NUMBER,
EDI856_PALLET.LOT_ID AS BATCH_NUMBER, 
 CAST(EDI856_PALLET.DATETIMEPROD AS DATE) AS PRODUCTION_DATE,
 COALESCE(RIGHT(ORDRHDR_CUSTOM_DATA4, CHARINDEX('-',REVERSE(ORDRHDR_CUSTOM_DATA4))-1), 'SO') AS DOCUMENT_TYPE,
   EDI856_ORDER.ORDRHDR_CUSTOM_DATA7 AS TRANSACTION_ID,
   EDI856_ORDER.ORDRHDR_CUSTOM_DATA12 as TARP_ID




FROM  asctrac6.dbo.ORDRDET det 
left Join EDI856_SHIPMENT
ON EDI856_SHIPMENT.SHIPMENT_ID = det.ORDERNUMBER
left join EDI856_ORDER 
ON edi856_order.SHIPMENT_ID = edi856_shipment.shipment_id
left JOIN EDI856_PALLET 
ON edi856_pallet.SHIPMENT_ID = edi856_shipment.shipment_id
AND edi856_pallet.ASC_ITEM_ID = det.ascitemid 
AND det.LINENUMBER = EDI856_PALLET.ORDER_LINE_NUM 
Join asctrac6.dbo.ITEMMSTR i
on det.itemid = i.itemid
and i.vmi_custid = '75CBI'
-- Remove for 75CBI --
--Join asctrac6.dbo.pallet_log pl
--on pl.ORDER_REF_NUM = det.ORDERNUMBER
WHERE  EDI856_SHIPMENT.TRADING_PARTNER_ID = '75CBI'
AND EDI856_SHIPMENT.RECORD_SENT <> 'N' 
--AND EDI856_PALLET.MASTER_CONTAINER_FLAG = 'F' 
--AND EDI856_ORDER.ORDRHDR_CUSTOM_DATA5 = '0081913682'
AND DATEDIFF (MINUTE, EDI856_SHIPMENT.DATETIME_WRITTEN, getdate()) > 10
ORDER BY EDI856_SHIPMENT.SHIPMENT_ID, EDI856_ORDER.CUSTOMER_ORDERNUM, EDI856_PALLET.ORDER_LINE_NUM,
EDI856_PALLET.CONTAINER_ID


UPDATE dbo.EDI856_SHIPMENT SET RECORD_SENT = 'Y', DATETIME_SENT = GETDATE()
WHERE EDI856_SHIPMENT.TRADING_PARTNER_ID = '75CBI' 
AND EDI856_SHIPMENT.RECORD_SENT <> 'Y' 
AND DATEDIFF (MINUTE, EDI856_SHIPMENT.DATETIME_WRITTEN, getdate()) > 10

END;


select * FROM dbo.EDI856_SHIPMENT WHERE EDI856_SHIPMENT.TRADING_PARTNER_ID = '75CBI' 
--AND EDI856_SHIPMENT.RECORD_SENT <> 'Y' 
-- AND DATEDIFF (MINUTE, EDI856_SHIPMENT.DATETIME_WRITTEN, getdate()) > 10


SELECT 
  'USF4' AS WAREHOUSE_NUMBER,
  CAST(EDI856_SHIPMENT.DATE_SHIPPED AS DATE) AS ACTUAL_SHIPPED_DATE,
  EDI856_SHIPMENT.ST_NAME AS SHIP_TO_NAME, 
  EDI856_SHIPMENT.ST_CODE AS SHIP_TO_NUMBER, 
  EDI856_SHIPMENT.ST_ADDRESS1 AS MAILING_ADDRESS1,
  EDI856_SHIPMENT.ST_ADDRESS2 AS MAILING_ADDRESS2,
  '' AS MAILING_ADDRESS3,
  EDI856_SHIPMENT.ST_CITY AS CITY, 
  EDI856_SHIPMENT.ST_STATE AS STATE, 
  EDI856_SHIPMENT.ST_ZIP AS ZIP_CODE, 
  EDI856_ORDER.ORDRHDR_CUSTOM_DATA5 AS DOCUMENT_NUMBER, 
  EDI856_ORDER.ORDRHDR_CUSTOM_DATA4 AS DOCUMENT_NUMBER_TYPE,
  EDI856_PALLET.CONTAINER_ID AS HANDLING_UNIT_NUMBER, 
  det.itemid AS ITEM_NUMBER, 
  SUBSTRING(i.DESCRIPTION, 1, 40) AS ITEM_DESCRIPTION, 
  ISNULL(EDI856_PALLET.STOCKING_UOM, 'EA') AS UNIT_OF_MEASURE, 
  CAST(COALESCE(EDI856_PALLET.QTY_ON_PALLET, 1) AS NUMERIC(15,3)) AS ITEM_QUANTITY,
  CAST(COALESCE(EDI856_PALLET.QTY_ON_PALLET, 1) AS NUMERIC(15,3)) AS HANDLING_UNIT_QUANTITY,
  det.linenumber AS ITEM_LINE_NUMBER,
  EDI856_PALLET.LOT_ID AS BATCH_NUMBER, 
  CAST(EDI856_PALLET.DATETIMEPROD AS DATE) AS PRODUCTION_DATE,
  COALESCE(RIGHT(ORDRHDR_CUSTOM_DATA4, CHARINDEX('-',REVERSE(ORDRHDR_CUSTOM_DATA4))-1), 'SO') AS DOCUMENT_TYPE,
  EDI856_ORDER.ORDRHDR_CUSTOM_DATA7 AS TRANSACTION_ID,
  -- Use CASE to conditionally set TARP_ID to NULL
  CASE 
    WHEN det.itemid = 'TARP' THEN EDI856_ORDER.ORDRHDR_CUSTOM_DATA12 
    ELSE NULL 
  END AS TARP_ID
FROM asctrac6.dbo.ORDRDET det 
LEFT JOIN EDI856_SHIPMENT
  ON EDI856_SHIPMENT.SHIPMENT_ID = det.ORDERNUMBER
LEFT JOIN EDI856_ORDER 
  ON EDI856_ORDER.SHIPMENT_ID = EDI856_SHIPMENT.SHIPMENT_ID
LEFT JOIN EDI856_PALLET 
  ON EDI856_PALLET.SHIPMENT_ID = EDI856_SHIPMENT.SHIPMENT_ID
  AND EDI856_PALLET.ASC_ITEM_ID = det.ascitemid 
  AND det.LINENUMBER = EDI856_PALLET.ORDER_LINE_NUM 
JOIN asctrac6.dbo.ITEMMSTR i
  ON det.itemid = i.itemid
  AND i.vmi_custid = '75CBI'
WHERE EDI856_SHIPMENT.TRADING_PARTNER_ID = '75CBI'
  AND EDI856_SHIPMENT.RECORD_SENT <> 'N' 
  AND DATEDIFF(MINUTE, EDI856_SHIPMENT.DATETIME_WRITTEN, GETDATE()) > 10
ORDER BY EDI856_SHIPMENT.SHIPMENT_ID, 
         EDI856_ORDER.CUSTOMER_ORDERNUM, 
         EDI856_PALLET.ORDER_LINE_NUM,
         EDI856_PALLET.CONTAINER_ID;













USE [ASCTracEDI856]
GO
/****** Object:  StoredProcedure [dbo].[API_945_REQUEST_75CBI]    Script Date: 12/11/2024 10:51:07 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Laurel Williams
-- Create date: 4/24/2020
-- Description:	Extract Sales Order Confirmation with LPN level data specifically for CBI

-- Update mark/heena 5/3/2024 to accomodate plastic pallet shipment
-- Update by Kevin THomas 10/14/2024 rename to API_945_REQUEST_75CBI  cloning API_945_REQUEST_CBI 
-- Update Bill Matangos 2024.11.07 Remove Beer Items Code
-- Update Bill Matangos 2024.11.27 Add export of Header CUSTOM_DATA12 as TARP_ID 
-- =============================================
ALTER PROCEDURE [dbo].[API_945_REQUEST_75CBI] 
	-- Add the parameters for the stored procedure here

	AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	UPDATE EDI856_SHIPMENT set RECORD_SENT = 'n' where actual_shipped_date   = '2024-12-11'

SELECT 
  'USF4' AS WAREHOUSE_NUMBER,
  CAST(EDI856_SHIPMENT.DATE_SHIPPED AS DATE) AS ACTUAL_SHIPPED_DATE,
  EDI856_SHIPMENT.ST_NAME AS SHIP_TO_NAME, 
  EDI856_SHIPMENT.ST_CODE AS SHIP_TO_NUMBER, 
  EDI856_SHIPMENT.ST_ADDRESS1 AS MAILING_ADDRESS1,
  EDI856_SHIPMENT.ST_ADDRESS2 AS MAILING_ADDRESS2,
  '' AS MAILING_ADDRESS3,
  EDI856_SHIPMENT.ST_CITY AS CITY, 
  EDI856_SHIPMENT.ST_STATE AS STATE, 
  EDI856_SHIPMENT.ST_ZIP AS ZIP_CODE, 
  EDI856_ORDER.ORDRHDR_CUSTOM_DATA5 AS DOCUMENT_NUMBER, 
  EDI856_ORDER.ORDRHDR_CUSTOM_DATA4 AS DOCUMENT_NUMBER_TYPE,
  EDI856_PALLET.CONTAINER_ID AS HANDLING_UNIT_NUMBER, 
  det.itemid AS ITEM_NUMBER, 
  SUBSTRING(i.DESCRIPTION, 1, 40) AS ITEM_DESCRIPTION, 
  ISNULL(EDI856_PALLET.STOCKING_UOM, 'EA') AS UNIT_OF_MEASURE, 
  CAST(COALESCE(EDI856_PALLET.QTY_ON_PALLET, 1) AS NUMERIC(15,3)) AS ITEM_QUANTITY,
  CAST(COALESCE(EDI856_PALLET.QTY_ON_PALLET, 1) AS NUMERIC(15,3)) AS HANDLING_UNIT_QUANTITY,
  det.linenumber AS ITEM_LINE_NUMBER,
  EDI856_PALLET.LOT_ID AS BATCH_NUMBER, 
  CAST(EDI856_PALLET.DATETIMEPROD AS DATE) AS PRODUCTION_DATE,
  COALESCE(RIGHT(ORDRHDR_CUSTOM_DATA4, CHARINDEX('-',REVERSE(ORDRHDR_CUSTOM_DATA4))-1), 'SO') AS DOCUMENT_TYPE,
  EDI856_ORDER.ORDRHDR_CUSTOM_DATA7 AS TRANSACTION_ID,
  -- Use CASE to conditionally set TARP_ID to NULL
  CASE 
    WHEN det.itemid = 'TARP' THEN EDI856_ORDER.ORDRHDR_CUSTOM_DATA12 
    ELSE NULL 
  END AS TARP_ID
FROM asctrac6.dbo.ORDRDET det 
LEFT JOIN EDI856_SHIPMENT
  ON EDI856_SHIPMENT.SHIPMENT_ID = det.ORDERNUMBER
LEFT JOIN EDI856_ORDER 
  ON EDI856_ORDER.SHIPMENT_ID = EDI856_SHIPMENT.SHIPMENT_ID
LEFT JOIN EDI856_PALLET 
  ON EDI856_PALLET.SHIPMENT_ID = EDI856_SHIPMENT.SHIPMENT_ID
  AND EDI856_PALLET.ASC_ITEM_ID = det.ascitemid 
  AND det.LINENUMBER = EDI856_PALLET.ORDER_LINE_NUM 
JOIN asctrac6.dbo.ITEMMSTR i
  ON det.itemid = i.itemid
  AND i.vmi_custid = '75CBI'
WHERE EDI856_SHIPMENT.TRADING_PARTNER_ID = '75CBI'
  AND EDI856_SHIPMENT.RECORD_SENT <> 'y' 
  AND DATEDIFF(MINUTE, EDI856_SHIPMENT.DATETIME_WRITTEN, GETDATE()) > 10
ORDER BY EDI856_SHIPMENT.SHIPMENT_ID, 
         EDI856_ORDER.CUSTOMER_ORDERNUM, 
         EDI856_PALLET.ORDER_LINE_NUM,
         EDI856_PALLET.CONTAINER_ID;



-- UPDATE dbo.EDI856_SHIPMENT SET RECORD_SENT = 'Y', DATETIME_SENT = GETDATE()
---WHERE EDI856_SHIPMENT.TRADING_PARTNER_ID = '75CBI' 
-- AND EDI856_SHIPMENT.RECORD_SENT <> 'Y' 
-- AND DATEDIFF (MINUTE, EDI856_SHIPMENT.DATETIME_WRITTEN, getdate()) > 10

END;

		 select * from EDI856_SHIPMENT where TRADING_PARTNER_ID = '75CBI'

UPDATE EDI856_SHIPMENT
SET ACTUAL_SHIPPED_DATE = 'N'
WHERE EDI856_SHIPMENT.TRADING_PARTNER_ID = '75CBI'
  AND SHIPMENT_ID = '0082247031CI';


  UPDATE EDI856_SHIPMENT
SET RECORD_SENT = 'N',
    SHIPMENT_COMPLETE = 'F'
WHERE EDI856_SHIPMENT.TRADING_PARTNER_ID = '75CBI'
  AND SHIPMENT_ID = '0082247031CI';

USE [ASCTracEDI856]
GO
/****** Object:  StoredProcedure [dbo].[API_945_REQUEST_75CBI]    Script Date: 12/11/2024 2:30:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Laurel Williams
-- Create date: 4/24/2020
-- Description:	Extract Sales Order Confirmation with LPN level data specifically for CBI

-- Update mark/heena 5/3/2024 to accomodate plastic pallet shipment
-- Update by Kevin THomas 10/14/2024 rename to API_945_REQUEST_75CBI  cloning API_945_REQUEST_CBI 
-- Update Bill Matangos 2024.11.07 Remove Beer Items Code
-- Update Bill Matangos 2024.11.27 Add export of Header CUSTOM_DATA12 as TARP_ID 
-- Update Kevin Thomas 2024.12.11 to limit the tarp-id value to only the line items where ITEM_NUMBER = 'TARp' force NULL on all other line per CBI
-- =============================================
ALTER PROCEDURE [dbo].[API_945_REQUEST_75CBI] 
	-- Add the parameters for the stored procedure here

	AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here



SELECT 
  'USF4' AS WAREHOUSE_NUMBER,



  EDI856_SHIPMENT.RECORD_SENT,
  CAST(EDI856_SHIPMENT.DATE_SHIPPED AS DATE) AS ACTUAL_SHIPPED_DATE,

    -- Use CASE to conditionally set TARP_ID to NULL
  CASE 
    WHEN det.itemid = 'TARP' THEN EDI856_ORDER.ORDRHDR_CUSTOM_DATA12 
    ELSE NULL 
  END AS TARP_ID,


  EDI856_SHIPMENT.ST_NAME AS SHIP_TO_NAME, 
  EDI856_SHIPMENT.ST_CODE AS SHIP_TO_NUMBER, 
  EDI856_SHIPMENT.ST_ADDRESS1 AS MAILING_ADDRESS1,
  EDI856_SHIPMENT.ST_ADDRESS2 AS MAILING_ADDRESS2,
  '' AS MAILING_ADDRESS3,
  EDI856_SHIPMENT.ST_CITY AS CITY, 
  EDI856_SHIPMENT.ST_STATE AS STATE, 
  EDI856_SHIPMENT.ST_ZIP AS ZIP_CODE, 
  EDI856_ORDER.ORDRHDR_CUSTOM_DATA5 AS DOCUMENT_NUMBER, 
  EDI856_ORDER.ORDRHDR_CUSTOM_DATA4 AS DOCUMENT_NUMBER_TYPE,
  EDI856_PALLET.CONTAINER_ID AS HANDLING_UNIT_NUMBER, 
  det.itemid AS ITEM_NUMBER, 
  SUBSTRING(i.DESCRIPTION, 1, 40) AS ITEM_DESCRIPTION, 
  ISNULL(EDI856_PALLET.STOCKING_UOM, 'EA') AS UNIT_OF_MEASURE, 
  CAST(COALESCE(EDI856_PALLET.QTY_ON_PALLET, 1) AS NUMERIC(15,3)) AS ITEM_QUANTITY,
  CAST(COALESCE(EDI856_PALLET.QTY_ON_PALLET, 1) AS NUMERIC(15,3)) AS HANDLING_UNIT_QUANTITY,
  det.linenumber AS ITEM_LINE_NUMBER,
  EDI856_PALLET.LOT_ID AS BATCH_NUMBER, 
  CAST(EDI856_PALLET.DATETIMEPROD AS DATE) AS PRODUCTION_DATE,
  COALESCE(RIGHT(ORDRHDR_CUSTOM_DATA4, CHARINDEX('-',REVERSE(ORDRHDR_CUSTOM_DATA4))-1), 'SO') AS DOCUMENT_TYPE,
  EDI856_ORDER.ORDRHDR_CUSTOM_DATA7 AS TRANSACTION_ID

FROM asctrac6.dbo.ORDRDET det 
LEFT JOIN EDI856_SHIPMENT
  ON EDI856_SHIPMENT.SHIPMENT_ID = det.ORDERNUMBER
LEFT JOIN EDI856_ORDER 
  ON EDI856_ORDER.SHIPMENT_ID = EDI856_SHIPMENT.SHIPMENT_ID
LEFT JOIN EDI856_PALLET 
  ON EDI856_PALLET.SHIPMENT_ID = EDI856_SHIPMENT.SHIPMENT_ID
  AND EDI856_PALLET.ASC_ITEM_ID = det.ascitemid 
  AND det.LINENUMBER = EDI856_PALLET.ORDER_LINE_NUM 
JOIN asctrac6.dbo.ITEMMSTR i
  ON det.itemid = i.itemid
  AND i.vmi_custid = '75CBI'
WHERE EDI856_SHIPMENT.TRADING_PARTNER_ID = '75CBI'
  AND EDI856_SHIPMENT.RECORD_SENT <> 'Y' 
  AND DATEDIFF(MINUTE, EDI856_SHIPMENT.DATETIME_WRITTEN, GETDATE()) > 10
ORDER BY EDI856_SHIPMENT.SHIPMENT_ID, 
         EDI856_ORDER.CUSTOMER_ORDERNUM, 
         EDI856_PALLET.ORDER_LINE_NUM,
         EDI856_PALLET.CONTAINER_ID;



-- uncomment in prod
-- UPDATE dbo.EDI856_SHIPMENT SET RECORD_SENT = 'Y', DATETIME_SENT = GETDATE()
---WHERE EDI856_SHIPMENT.TRADING_PARTNER_ID = '75CBI' 
-- AND EDI856_SHIPMENT.RECORD_SENT <> 'Y' 
-- AND DATEDIFF (MINUTE, EDI856_SHIPMENT.DATETIME_WRITTEN, getdate()) > 10

END;


